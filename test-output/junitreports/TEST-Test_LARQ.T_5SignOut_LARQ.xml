<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LAPTOP-62B9JJRS" failures="0" tests="1" name="Test_LARQ.T_5SignOut_LARQ" time="7.338" errors="1" timestamp="2024-11-14T17:43:30 IST" skipped="0">
  <testcase classname="Test_LARQ.T_5SignOut_LARQ" name="verifyLoginWithValidCred" time="7.338">
    <error message="element click intercepted: Element &lt;button type=&quot;submit&quot; class=&quot;c01239 c01239--primary      null undefined&quot;&gt;...&lt;/button&gt; is not clickable at point (436, 527). Other element would receive the click: &lt;iframe title=&quot;In-App Message&quot; srcdoc=&quot;&lt;!DOCTYPE html&gt;
&lt;html lang=&amp;quot;en&amp;quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&amp;quot;UTF-8&amp;quot; /&gt;
    &lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot; /&gt;
    &lt;title&gt;In-App Message&lt;/title&gt;
    &lt;style&gt;
      @keyframes slideUp {
        0% {
          transform: translateY(100%);
          opacity: 0;
        }
        100% {
          transform: translateY(0);
          opacity: 1;
        }
      }

      .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(21, 58, 91, 0.6);
        opacity: 1;
        transition: opacity 0.5s ease;
        z-index: 9998;
      }

      .in-app-message {
        position: fixed;
        font-family: &amp;quot;Value&amp;quot;, sans-serif;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: white;
        padding: 0;
        box-shadow: 0px -4px 12px rgba(0, 0, 0, 0.1);
        z-index: 9999;
        border-radius: 16px 16px 0 0;
        color: #153a5b;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        animation: slideUp 1s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
        transform: translateY(100%);
        opacity: 0;
        max-height: 90vh;
        overflow-y: auto;
      }

      .in-app-message img {
        width: 100%;
        height: auto;
        display: block;
        margin: 0;
        padding: 0;
        border-radius: 16px 16px 0 0;
      }

      .message-content {
        padding: 20px 30px 42px;
        flex: 1;
      }

      .in-app-message h1 {
        font-size: 30px;
        line-height: 42px;
        letter-spacing: 0.75px;
        margin: 10px 0;
      }

      .in-app-message p {
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        margin: 10px 0 15px;
      }

      .close-btn {
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        position: absolute;
        top: 18px;
        right: 18px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: transparent;
        color: #ffffff;
        font-size: 20px;
        font-weight: 100;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .input-field {
        box-sizing: border-box;
        width: 100%;
        padding: 12px 15px;
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        border: 1px solid #ccd7e0;
        color: #153a5b99;
        border-radius: 50px;
        margin-bottom: 15px;
        outline: none;
        transition: border-color 0.3s ease;
      }

      .input-field:focus {
        border-color: #153a5b;
      }

      .error-message {
        color: #cc4749;
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        display: none;
      }

      .in-app-message p.error-message {
        margin: 0px 0px 6px 15px;
      }

      .button-group {
        display: flex;
        flex-direction: row;
        gap: 8px;
        width: 100%;
      }

      .button {
        padding: 12px;
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        color: white;
        background-color: #153a5b;
        font-weight: bold;
      }

      .button.close {
        background-color: transparent;
        color: #153a5b;
        font-weight: 400;
        width: 35%;
        order: 1;
      }

      .button.submit {
        width: 65%;
        order: 2;
      }

      .timer-message {
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        color: #153a5b99;
        text-align: center;
        margin-top: 15px;
      }

      @media (min-width: 650px) and (max-width: 1024px) {
        .in-app-message {
          flex-direction: column;
          max-width: 600px;
          margin: 0 auto;
          height: auto;
        }

        .in-app-message img {
          width: 100%;
          height: 300px; /* Fixed height for tablet */
          object-fit: cover;
          object-position: top 30%; /* This ensures the top of the image stays visible */
          border-radius: 16px 16px 0 0;
        }

        .message-content {
          width: auto;
          padding: 24px 30px 42px;
        }
      }

      @media (min-width: 1025px) {
        .in-app-message {
          flex-direction: row;
          max-width: 1200px;
          margin: 0 auto;
          height: 600px;
        }

        .in-app-message img {
          width: 50%;
          height: 100%;
          object-fit: cover;
          object-position: center;
          border-radius: 16px 0 0 0;
          flex-shrink: 0;
        }

        .message-content {
          width: 50%;
          padding: 30px;
          display: flex;
          flex-direction: column;
          justify-content: center;
        }

        .close-btn {
          color: #153a5b;
        }

        .in-app-message h1 {
          font-size: 40px;
          line-height: 52px;
          letter-spacing: 0.75px;
          margin: 15px 0;
        }

        .in-app-message p {
          font-size: 18px;
          line-height: 27px;
          letter-spacing: 0.25px;
          margin: 15px 0 30px;
        }

        .button-group {
          flex-direction: column;
          width: 100%;
        }

        .button.close,
        .button.submit {
          width: 100%;
        }

        .button.submit {
          order: 1;
        }

        .button.close {
          order: 2;
        }

        .input-field {
          padding: 15px;
          margin-bottom: 20px;
          font-size: 18px;
          line-height: 27px;
          letter-spacing: 0.25px;
        }
      }
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class=&amp;quot;overlay&amp;quot; id=&amp;quot;overlay&amp;quot;&gt;&lt;/div&gt;

    &lt;div class=&amp;quot;in-app-message&amp;quot; id=&amp;quot;inAppMessage&amp;quot;&gt;
      &lt;button class=&amp;quot;close-btn&amp;quot; id=&amp;quot;closeXButton&amp;quot;&gt;&amp;amp;#10006;&lt;/button&gt;
      &lt;img
        src=&amp;quot;https://braze-images.com/appboy/communication/assets/image_assets/images/67288ffb5f26be0066c8bd22/original.jpg?1730711547&amp;quot;
      /&gt;
      &lt;div class=&amp;quot;message-content&amp;quot;&gt;
        &lt;h1&gt;Get $5 off first order&lt;/h1&gt;
        &lt;p&gt;
          Join the list to save on your first purchase and receive exclusive
          offers, hydration news, and more.
        &lt;/p&gt;
        &lt;p class=&amp;quot;error-message&amp;quot; id=&amp;quot;errorMessage&amp;quot;&gt;Invalid email address.&lt;/p&gt;
        &lt;input
          type=&amp;quot;email&amp;quot;
          class=&amp;quot;input-field&amp;quot;
          id=&amp;quot;emailInput&amp;quot;
          placeholder=&amp;quot;Enter your email&amp;quot;
        /&gt;

        &lt;div class=&amp;quot;button-group&amp;quot; id=&amp;quot;buttonGroup&amp;quot;&gt;
          &lt;button class=&amp;quot;button submit&amp;quot; id=&amp;quot;submitButton&amp;quot;&gt;Subscribe&lt;/button&gt;
          &lt;button class=&amp;quot;button close&amp;quot; id=&amp;quot;noThanksButton&amp;quot;&gt;No thanks&lt;/button&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;script&gt;
      window.addEventListener(
        &amp;quot;ab.BridgeReady&amp;quot;,
        function () {
          // Event handler when the close X button is clicked
          document.querySelector(&amp;quot;#closeXButton&amp;quot;).onclick = function () {
            brazeBridge.logClick(&amp;quot;close_x&amp;quot;);
            brazeBridge.requestImmediateDataFlush();
            brazeBridge.closeMessage();
          };

          document.querySelector(&amp;quot;#submitButton&amp;quot;).onclick = function () {
            const emailInput = document.getElementById(&amp;quot;emailInput&amp;quot;);
            const errorMessage = document.getElementById(&amp;quot;errorMessage&amp;quot;);
            const buttonGroup = document.getElementById(&amp;quot;buttonGroup&amp;quot;);
            const messageContent = document.querySelector(&amp;quot;.message-content&amp;quot;);

            // Basic email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(emailInput.value)) {
              errorMessage.style.display = &amp;quot;block&amp;quot;;
              return;
            }

            errorMessage.style.display = &amp;quot;none&amp;quot;;

            // Update content
            document.querySelector(&amp;quot;.message-content h1&amp;quot;).textContent =
              &amp;quot;You&#039;re on the list&amp;quot;;
            document.querySelector(&amp;quot;.message-content p&amp;quot;).textContent =
              &amp;quot;Check your email for a $5 off coupon code. Happy shopping!&amp;quot;;

            // Remove input field and buttons
            emailInput.style.display = &amp;quot;none&amp;quot;;
            buttonGroup.style.display = &amp;quot;none&amp;quot;;

            // Add timer message
            const timerMessage = document.createElement(&amp;quot;p&amp;quot;);
            timerMessage.className = &amp;quot;timer-message&amp;quot;;
            messageContent.appendChild(timerMessage);

            // Start countdown
            let secondsLeft = 5;
            const updateTimer = () =&gt; {
              timerMessage.textContent = `Automatically closing in ${secondsLeft}...`;
              if (secondsLeft &gt; 0) {
                secondsLeft--;
                setTimeout(updateTimer, 1000);
              }
            };
            updateTimer();

            // Braze tracking
            brazeBridge.logClick(&amp;quot;sign_up_now&amp;quot;);
            brazeBridge.getUser().addAlias(&amp;quot;email&amp;quot;, emailInput.value);
            brazeBridge.getUser().setEmail(emailInput.value);
            brazeBridge.getUser().setCustomUserAttribute(&amp;quot;signup_source&amp;quot;, &amp;quot;pop-up&amp;quot;);
            brazeBridge.getUser().setCustomUserAttribute(&amp;quot;signup_source_offer&amp;quot;, &amp;quot;flat 5 off&amp;quot;);
            brazeBridge.getUser().setEmailNotificationSubscriptionType(&amp;quot;opted_in&amp;quot;);
            brazeBridge.getUser().addToSubscriptionGroup(&amp;quot;a7c2c7b4-6f74-4a35-8326-8478dde6bd92&amp;quot;);
            brazeBridge.logCustomEvent(&amp;quot;email_submitted&amp;quot;, {&amp;quot;source&amp;quot;: &amp;quot;pop-up&amp;quot;,&amp;quot;offer&amp;quot;: &amp;quot;flat 5 off&amp;quot;,});
            brazeBridge.requestImmediateDataFlush();

            // Close message after 5 seconds
            setTimeout(function () {brazeBridge.closeMessage();}, 5000);
        };

          document.querySelector(&amp;quot;#noThanksButton&amp;quot;).onclick = function () {
            brazeBridge.logClick(&amp;quot;noThanksButton&amp;quot;);
            brazeBridge.requestImmediateDataFlush();
            brazeBridge.closeMessage();
          };
        },
        false
      );
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;&quot; class=&quot;ab-in-app-message  ab-html-message ab-modal-interactions&quot;&gt;&lt;/iframe&gt;
  (Session info: chrome=130.0.6723.117)
Build info: version: &#039;4.25.0&#039;, revision: &#039;8a8aea2337&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;22.0.2&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c98e8a359277823c05cd362f827d1b22, clickElement {id=f.151D71C647C998CDEFA5D93E43D426E4.d.37153F499F18B93E2063EEA6CE354798.e.1750}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.117, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\Arjun\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62431}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62431/devtoo..., se:cdpVersion: 130.0.6723.117, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c98e8a359277823c05cd362f827d1b22)] -&gt; xpath: //*[@id=&quot;main-content&quot;]/div[3]/div/div/div[1]/form/div[3]/button]
Session ID: c98e8a359277823c05cd362f827d1b22" type="org.openqa.selenium.ElementClickInterceptedException">
      <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button type="submit" class="c01239 c01239--primary      null undefined">...</button> is not clickable at point (436, 527). Other element would receive the click: <iframe title="In-App Message" srcdoc="<!DOCTYPE html>
<html lang=&quot;en&quot;>
  <head>
    <meta charset=&quot;UTF-8&quot; />
    <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; />
    <title>In-App Message</title>
    <style>
      @keyframes slideUp {
        0% {
          transform: translateY(100%);
          opacity: 0;
        }
        100% {
          transform: translateY(0);
          opacity: 1;
        }
      }

      .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(21, 58, 91, 0.6);
        opacity: 1;
        transition: opacity 0.5s ease;
        z-index: 9998;
      }

      .in-app-message {
        position: fixed;
        font-family: &quot;Value&quot;, sans-serif;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: white;
        padding: 0;
        box-shadow: 0px -4px 12px rgba(0, 0, 0, 0.1);
        z-index: 9999;
        border-radius: 16px 16px 0 0;
        color: #153a5b;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        animation: slideUp 1s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
        transform: translateY(100%);
        opacity: 0;
        max-height: 90vh;
        overflow-y: auto;
      }

      .in-app-message img {
        width: 100%;
        height: auto;
        display: block;
        margin: 0;
        padding: 0;
        border-radius: 16px 16px 0 0;
      }

      .message-content {
        padding: 20px 30px 42px;
        flex: 1;
      }

      .in-app-message h1 {
        font-size: 30px;
        line-height: 42px;
        letter-spacing: 0.75px;
        margin: 10px 0;
      }

      .in-app-message p {
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        margin: 10px 0 15px;
      }

      .close-btn {
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        position: absolute;
        top: 18px;
        right: 18px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: transparent;
        color: #ffffff;
        font-size: 20px;
        font-weight: 100;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .input-field {
        box-sizing: border-box;
        width: 100%;
        padding: 12px 15px;
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        border: 1px solid #ccd7e0;
        color: #153a5b99;
        border-radius: 50px;
        margin-bottom: 15px;
        outline: none;
        transition: border-color 0.3s ease;
      }

      .input-field:focus {
        border-color: #153a5b;
      }

      .error-message {
        color: #cc4749;
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        display: none;
      }

      .in-app-message p.error-message {
        margin: 0px 0px 6px 15px;
      }

      .button-group {
        display: flex;
        flex-direction: row;
        gap: 8px;
        width: 100%;
      }

      .button {
        padding: 12px;
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        color: white;
        background-color: #153a5b;
        font-weight: bold;
      }

      .button.close {
        background-color: transparent;
        color: #153a5b;
        font-weight: 400;
        width: 35%;
        order: 1;
      }

      .button.submit {
        width: 65%;
        order: 2;
      }

      .timer-message {
        font-size: 17px;
        line-height: 25px;
        letter-spacing: 0.25px;
        color: #153a5b99;
        text-align: center;
        margin-top: 15px;
      }

      @media (min-width: 650px) and (max-width: 1024px) {
        .in-app-message {
          flex-direction: column;
          max-width: 600px;
          margin: 0 auto;
          height: auto;
        }

        .in-app-message img {
          width: 100%;
          height: 300px; /* Fixed height for tablet */
          object-fit: cover;
          object-position: top 30%; /* This ensures the top of the image stays visible */
          border-radius: 16px 16px 0 0;
        }

        .message-content {
          width: auto;
          padding: 24px 30px 42px;
        }
      }

      @media (min-width: 1025px) {
        .in-app-message {
          flex-direction: row;
          max-width: 1200px;
          margin: 0 auto;
          height: 600px;
        }

        .in-app-message img {
          width: 50%;
          height: 100%;
          object-fit: cover;
          object-position: center;
          border-radius: 16px 0 0 0;
          flex-shrink: 0;
        }

        .message-content {
          width: 50%;
          padding: 30px;
          display: flex;
          flex-direction: column;
          justify-content: center;
        }

        .close-btn {
          color: #153a5b;
        }

        .in-app-message h1 {
          font-size: 40px;
          line-height: 52px;
          letter-spacing: 0.75px;
          margin: 15px 0;
        }

        .in-app-message p {
          font-size: 18px;
          line-height: 27px;
          letter-spacing: 0.25px;
          margin: 15px 0 30px;
        }

        .button-group {
          flex-direction: column;
          width: 100%;
        }

        .button.close,
        .button.submit {
          width: 100%;
        }

        .button.submit {
          order: 1;
        }

        .button.close {
          order: 2;
        }

        .input-field {
          padding: 15px;
          margin-bottom: 20px;
          font-size: 18px;
          line-height: 27px;
          letter-spacing: 0.25px;
        }
      }
    </style>
  </head>
  <body>
    <div class=&quot;overlay&quot; id=&quot;overlay&quot;></div>

    <div class=&quot;in-app-message&quot; id=&quot;inAppMessage&quot;>
      <button class=&quot;close-btn&quot; id=&quot;closeXButton&quot;>&amp;#10006;</button>
      <img
        src=&quot;https://braze-images.com/appboy/communication/assets/image_assets/images/67288ffb5f26be0066c8bd22/original.jpg?1730711547&quot;
      />
      <div class=&quot;message-content&quot;>
        <h1>Get $5 off first order</h1>
        <p>
          Join the list to save on your first purchase and receive exclusive
          offers, hydration news, and more.
        </p>
        <p class=&quot;error-message&quot; id=&quot;errorMessage&quot;>Invalid email address.</p>
        <input
          type=&quot;email&quot;
          class=&quot;input-field&quot;
          id=&quot;emailInput&quot;
          placeholder=&quot;Enter your email&quot;
        />

        <div class=&quot;button-group&quot; id=&quot;buttonGroup&quot;>
          <button class=&quot;button submit&quot; id=&quot;submitButton&quot;>Subscribe</button>
          <button class=&quot;button close&quot; id=&quot;noThanksButton&quot;>No thanks</button>
        </div>
      </div>
    </div>

    <script>
      window.addEventListener(
        &quot;ab.BridgeReady&quot;,
        function () {
          // Event handler when the close X button is clicked
          document.querySelector(&quot;#closeXButton&quot;).onclick = function () {
            brazeBridge.logClick(&quot;close_x&quot;);
            brazeBridge.requestImmediateDataFlush();
            brazeBridge.closeMessage();
          };

          document.querySelector(&quot;#submitButton&quot;).onclick = function () {
            const emailInput = document.getElementById(&quot;emailInput&quot;);
            const errorMessage = document.getElementById(&quot;errorMessage&quot;);
            const buttonGroup = document.getElementById(&quot;buttonGroup&quot;);
            const messageContent = document.querySelector(&quot;.message-content&quot;);

            // Basic email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(emailInput.value)) {
              errorMessage.style.display = &quot;block&quot;;
              return;
            }

            errorMessage.style.display = &quot;none&quot;;

            // Update content
            document.querySelector(&quot;.message-content h1&quot;).textContent =
              &quot;You're on the list&quot;;
            document.querySelector(&quot;.message-content p&quot;).textContent =
              &quot;Check your email for a $5 off coupon code. Happy shopping!&quot;;

            // Remove input field and buttons
            emailInput.style.display = &quot;none&quot;;
            buttonGroup.style.display = &quot;none&quot;;

            // Add timer message
            const timerMessage = document.createElement(&quot;p&quot;);
            timerMessage.className = &quot;timer-message&quot;;
            messageContent.appendChild(timerMessage);

            // Start countdown
            let secondsLeft = 5;
            const updateTimer = () => {
              timerMessage.textContent = `Automatically closing in ${secondsLeft}...`;
              if (secondsLeft > 0) {
                secondsLeft--;
                setTimeout(updateTimer, 1000);
              }
            };
            updateTimer();

            // Braze tracking
            brazeBridge.logClick(&quot;sign_up_now&quot;);
            brazeBridge.getUser().addAlias(&quot;email&quot;, emailInput.value);
            brazeBridge.getUser().setEmail(emailInput.value);
            brazeBridge.getUser().setCustomUserAttribute(&quot;signup_source&quot;, &quot;pop-up&quot;);
            brazeBridge.getUser().setCustomUserAttribute(&quot;signup_source_offer&quot;, &quot;flat 5 off&quot;);
            brazeBridge.getUser().setEmailNotificationSubscriptionType(&quot;opted_in&quot;);
            brazeBridge.getUser().addToSubscriptionGroup(&quot;a7c2c7b4-6f74-4a35-8326-8478dde6bd92&quot;);
            brazeBridge.logCustomEvent(&quot;email_submitted&quot;, {&quot;source&quot;: &quot;pop-up&quot;,&quot;offer&quot;: &quot;flat 5 off&quot;,});
            brazeBridge.requestImmediateDataFlush();

            // Close message after 5 seconds
            setTimeout(function () {brazeBridge.closeMessage();}, 5000);
        };

          document.querySelector(&quot;#noThanksButton&quot;).onclick = function () {
            brazeBridge.logClick(&quot;noThanksButton&quot;);
            brazeBridge.requestImmediateDataFlush();
            brazeBridge.closeMessage();
          };
        },
        false
      );
    </script>
  </body>
</html>" class="ab-in-app-message  ab-html-message ab-modal-interactions"></iframe>
  (Session info: chrome=130.0.6723.117)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '22.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c98e8a359277823c05cd362f827d1b22, clickElement {id=f.151D71C647C998CDEFA5D93E43D426E4.d.37153F499F18B93E2063EEA6CE354798.e.1750}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.117, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\Arjun\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62431}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62431/devtoo..., se:cdpVersion: 130.0.6723.117, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c98e8a359277823c05cd362f827d1b22)] -> xpath: //*[@id="main-content"]/div[3]/div/div/div[1]/form/div[3]/button]
Session ID: c98e8a359277823c05cd362f827d1b22
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy12.click(Unknown Source)
at Page_LARQ.P_2Login_LARQ.SignButtonClick(P_2Login_LARQ.java:42)
at Test_LARQ.T_5SignOut_LARQ.verifyLoginWithValidCred(T_5SignOut_LARQ.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- verifyLoginWithValidCred -->
</testsuite> <!-- Test_LARQ.T_5SignOut_LARQ -->
